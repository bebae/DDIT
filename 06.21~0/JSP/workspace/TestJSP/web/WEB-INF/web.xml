<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <security-role>
        <role-name>tomcat</role-name>
    </security-role>
    <security-role>
        <role-name>role1</role-name>
    </security-role>
    <security-role>
        <role-name>admin</role-name>
    </security-role>

    <!-- 시큐리티의 제약 사항 설정 -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>TestJSP</web-resource-name>
            <url-pattern>/ch10/security01.jsp</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description>설명 기술 부분</description>
            <role-name>role1</role-name>
        </auth-constraint>
    </security-constraint>
    <!-- 시큐리티의 제약 사항 설정 -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>TestJSP</web-resource-name>
            <!-- 접근 제한 URL => tomcat 권한을 가진 사용자만 접근 허용 -->
            <url-pattern>/ch10/security02.jsp</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description>설명 기술 부분</description>
            <role-name>tomcat</role-name>
        </auth-constraint>
    </security-constraint>
    <!-- 시큐리티의 제약 사항 설정 -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>TestJSP</web-resource-name>
            <!-- 접근 제한 URL => tomcat 권한을 가진 사용자만 접근 허용 -->
            <url-pattern>/welcome/addProduct.jsp</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description>설명 기술 부분</description>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>TestJSP</web-resource-name>
            <!-- 접근 제한 URL => tomcat 권한을 가진 사용자만 접근 허용 -->
            <url-pattern>/welcome/product.jsp</url-pattern>
            <http-method>GET</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description>설명 기술 부분</description>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>

<!--  인증 - 로그인/로그아웃 처리를 위한 페이지를 설정  -->
    <login-config>
<!--        <auth-method>BASIC</auth-method>-->
        <auth-method>FORM</auth-method>
        <form-login-config>
            <form-login-page>/welcome/login.jsp</form-login-page>
            <form-error-page>/welcome/login_failed.jsp</form-error-page>
        </form-login-config>
    </login-config>

    <!-- 오류가 나면 오류 코드에 맞춰 오류 처리, JSP로 매핑
        [대표 오류 코드]
        404 : 지정된 URL을 처리하기 위한 자원이 없음
        500 : 개발자 JSP 코드 오류
    -->
    <error-page>
        <!-- 오류 코드 : 웹서버가 제공하는 기본 오류, 응답 상태 코드 -->
        <error-code>404</error-code>
<!--        <location>/error/error404.jsp</location>-->
        <location>/welcome/exceptionNoPage.jsp</location>
    </error-page>
    <error-page>
        <!-- 오류 코드 : 웹서버가 제공하는 기본 오류, 응답 상태 코드 -->
        <error-code>500</error-code>
        <location>/error/error500.jsp</location>
    </error-page>
    <error-page>
        <exception-type>java.lang.NullPointerException</exception-type>
        <location>/error/errorNullPointer.jsp</location>
    </error-page>

    <!-- Filter 인터페이스 구현 클래스 => 필터 -->
    <filter>
        <filter-name>Filter01</filter-name>
        <filter-class>filter.AuthenFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Filter01</filter-name>
        <url-pattern>/ch12/filter01_process.jsp</url-pattern>
    </filter-mapping>

    <!-- Filter 필터2 -->
    <filter>
        <filter-name>Filter02</filter-name>
        <filter-class>filter.InitParamFilter</filter-class>
        <init-param>
            <param-name>param1</param-name>
            <param-value>admin</param-value>
        </init-param>
        <init-param>
            <param-name>param2</param-name>
            <param-value>123</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Filter02</filter-name>
        <url-pattern>/ch12/filter02_process.jsp</url-pattern>
    </filter-mapping>
    <!-- 로그 파일 저장 -->
    <filter>
        <filter-name>LogFileFilter</filter-name>
        <filter-class>filter.LogFileFilter</filter-class>
        <!-- 로그가 저장될 파일 위치 지정-->
        <init-param>
            <param-name>filename</param-name>
            <param-value>c:\\logs\\monitor.log</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>LogFileFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- Web Market Log -->
    <filter>
        <filter-name>LogFilter</filter-name>
        <filter-class>filter.LogFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LogFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>